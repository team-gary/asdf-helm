#!/usr/bin/env bash

# set -e
# set -o pipefail

# [ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
# [ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

# get_platform () {
# 	local platform="$(uname | tr '[:upper:]' '[:lower:]')"

# 	case "$platform" in
# 		linux|darwin|freebsd)
# 			echo "Platform '${platform}' supported!" >&2
# 			;;
# 		*)
# 			echo "Platform '${platform}' not supported!" >&2
# 			exit 1
# 			;;
# 	esac

# 	echo -n $platform
# }

# get_arch () {
# 	local arch=""

# 	case "$(uname -m)" in
# 		x86_64|amd64) arch="amd64"; ;;
# 		i686|i386) arch="386"; ;;
# 		armv6l|armv7l) arch="armv6l"; ;;
# 		aarch64) arch="arm64"; ;;
# 		ppc64le) arch="ppc64le"; ;;
# 		*)
# 			echo "Arch '$(uname -m)' not supported!" >&2
# 			exit 1
# 			;;
# 	esac

# 	echo -n $arch
# }

# get_download_url() {
#   local version="$1"
#   local platform="$2"
#   echo "https://get.helm.sh/helm-v${version}-${platform}-amd64.tar.gz"
# }

# my_mktemp () {
# 	local tempdir=""
# 	if [ "linux" = "$1" ] ; then
# 		tempdir=$(mktemp -d asdf-helm.XXXX)
# 	else
# 		tempdir=$(mktemp -dt asdf-helm.XXXX)
# 	fi
# 	echo -n $tempdir
# }

# install_helm () {
# 	local install_type=$1
# 	local version=$2
# 	local install_path=$3
# 	local platform=$(get_platform)
# 	local arch=$(get_arch)
# 	local tempdir=$(my_mktemp $platform)
# 	local download_url=$(get_download_url $version $platform)
	
# 	local bin_install_path="$install_path/bin"

# 	mkdir -p $bin_install_path
# 	curl -sSL $download_url -o "${tempdir}/archive.tar.gz"
# 	tar -C "$tempdir" -xzf "${tempdir}/archive.tar.gz"

# 	if [ -f "${tempdir}/${platform}-amd64/tiller"]; then
# 		mv "${tempdir}/${platform}-amd64/tiller" "${bin_install_path}/tiller"
# 		chmod +x "${bin_install_path}/tiller"
# 	fi

# 	mv "${tempdir}/${platform}-amd64/helm" "${bin_install_path}/helm"
# 	chmod +x "${bin_install_path}/helm"

# 	rm -rf $tempdir 
# }

# install_helm $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
#!/usr/bin/env bash

set -e
set -o pipefail

install_helm() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local platform="$(uname | tr '[:upper:]' '[:lower:]')-amd64"
  local bin_install_path="$install_path/bin"
  local binary_path="$bin_install_path/helm"
  local download_url=$(get_download_url $version $platform)

  if [ "$TMPDIR" = "" ]; then
    local tmp_download_dir=$(mktemp -d -t helm_XXXXXX)
  else
    local tmp_download_dir=$TMPDIR
  fi

  local download_path="$tmp_download_dir/$(get_filename $version $platform)"

  echo "Downloading helm from ${download_url} to ${download_path}"
  curl -Lo $download_path $download_url

  echo "Creating bin directory"
  mkdir -p "${bin_install_path}"

  echo "Cleaning previous binaries"
  rm -f $binary_path 2>/dev/null || true

  echo "Copying binary"
  tar -zxf ${download_path} --directory $tmp_download_dir
  cp ${tmp_download_dir}/${platform}/helm ${bin_install_path}
  chmod +x ${binary_path}
}

get_filename() {
  local version="$1"
  local platform="$2"

  echo "helm-v${version}-${platform}.tar.gz"
}

get_download_url() {
  local version="$1"
  local platform="$2"
  local filename="$(get_filename $version $platform)"
  echo "https://get.helm.sh/${filename}"
}

install_helm $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH